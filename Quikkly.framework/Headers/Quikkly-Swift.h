// Generated by Apple Swift version 3.0.1 (swiftlang-800.0.58.6 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
@import Foundation;
@import UIKit;
@import CoreGraphics;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
enum ActionType : NSInteger;
@class ActionResult;
@class UIViewController;
@protocol ActionDelegate;

SWIFT_CLASS("_TtC7Quikkly6Action")
@interface Action : NSObject
@property (nonatomic, readonly) enum ActionType type;
@property (nonatomic, weak) id <ActionDelegate> _Nullable delegate;
/**
  A key value pair representation of the action’s properties/data.
  In a custom action this computed property MUST be overridden to store the action data on the backend.
*/
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable data;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithString:(NSString * _Nonnull)string;
/**
  Implementation of the action handling. Has to be overridden if subclassed.
  \param completion block must be invoked.

*/
- (void)performWithCompletion:(void (^ _Nonnull)(ActionResult * _Nonnull))completion;
/**
  Presents a view controller on th1e app’s root view controller unless the action’s delegate blocks this.
  Use this method instead of manually presenting or query the delegate first.
  \param viewController view controller to be presented.


  returns:
  whether the view controller was presented
*/
- (BOOL)presentWithViewController:(UIViewController * _Nonnull)viewController;
/**
  Opens a URL unless the action’s delegate blocks this.
  Use this method instead of manually opening URLs or query the delegate first.
  \param url the URL to be opened.


  returns:
  whether the URL was opened.
*/
- (BOOL)openUrl:(NSURL * _Nonnull)url;
@end


SWIFT_PROTOCOL("_TtP7Quikkly14ActionDelegate_")
@protocol ActionDelegate
@optional
/**
  Whether the action should display the provided view controller (for instance, to display the action result data).
*/
- (BOOL)action:(Action * _Nonnull)action shouldPresentViewController:(UIViewController * _Nonnull)viewController;
/**
  Invoked when a default view controller to diplay the action result will be presented.
*/
- (void)action:(Action * _Nonnull)action willPresentActionResultViewController:(UIViewController * _Nonnull)viewController;
/**
  Invoked when a default view controller to diplay the action result was dismissed.
*/
- (void)action:(Action * _Nonnull)action didDismissActionResultViewController:(UIViewController * _Nonnull)viewController;
/**
  Whether the action should open the provided URL.
*/
- (BOOL)action:(Action * _Nonnull)action shouldOpenURL:(NSURL * _Nonnull)url;
@end

@class Scannable;
@protocol ActionProcessorDelegate;

/**
  ActionProcessor for handling Quikkly actions
*/
SWIFT_CLASS("_TtC7Quikkly15ActionProcessor")
@interface ActionProcessor : NSObject <ActionDelegate>
@property (nonatomic, readonly) BOOL isLocked;
@property (nonatomic, weak) id <ActionProcessorDelegate> _Nullable delegate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/**
  Processing a Scannable object to perform its Action stored on the Quikkly back-end.
  \param scannable A scannable object


  returns:
  Whether processing was started. If false, the completion block will not be invoked.
*/
- (BOOL)processWithScannable:(Scannable * _Nonnull)scannable;
/**
  Processing a barcode to perform its Action stored on the Quikkly back-end.
  \param barcode A String representation of a barcode


  returns:
  Whether processing was started. If false, the completion block will not be invoked.
*/
- (BOOL)processWithBarcode:(NSString * _Nonnull)barcode;
/**
  Retrieves the Action object linked to a Scannable on the Quikkly back-end.
  \param scannable The scannable object to find related Actions for.

  \param completion Returns a nullable action object.

*/
- (void)actionForScannable:(Scannable * _Nonnull)scannable completion:(void (^ _Nonnull)(Action * _Nullable))completion;
/**
  Retrieves the Action object linked to a barcode on the Quikkly back-end.
  \param barcode The barcode to find related Actions for.

  \param completion Returns a nullable action object.

*/
- (void)actionForBarcode:(NSString * _Nonnull)barcode completion:(void (^ _Nonnull)(Action * _Nullable))completion;
- (BOOL)action:(Action * _Nonnull)action shouldPresentViewController:(UIViewController * _Nonnull)viewController;
- (void)action:(Action * _Nonnull)action willPresentActionResultViewController:(UIViewController * _Nonnull)viewController;
- (BOOL)action:(Action * _Nonnull)action shouldOpenURL:(NSURL * _Nonnull)url;
@end


SWIFT_PROTOCOL("_TtP7Quikkly23ActionProcessorDelegate_")
@protocol ActionProcessorDelegate
@optional
/**
  \code
  Processor will start processing

  \endcode*/
- (void)actionProcessorWillStartProcessing:(ActionProcessor * _Nonnull)actionProcessor;
/**
  \code
  Processor has finished processing. The action and result are provided.

  \endcode*/
- (void)actionProcessor:(ActionProcessor * _Nonnull)actionProcessor didProcessAction:(Action * _Nullable)action withResult:(ActionResult * _Nonnull)result;
/**
  Whether the processor should display the default action result view controller. Override and return false to prevent this.

  returns:
  default is true
*/
- (BOOL)actionProcessor:(ActionProcessor * _Nonnull)actionProcessor shouldPresentActionResultViewController:(UIViewController * _Nonnull)viewController forAction:(Action * _Nullable)action;
/**
  Invoked when a default view controller to diplay the action result will be presented.
*/
- (void)actionProcessor:(ActionProcessor * _Nonnull)actionProcessor willPresentActionResultViewController:(UIViewController * _Nonnull)viewController;
/**
  Invoked when a default view controller to diplay the action result was dismissed.
*/
- (void)actionProcessor:(ActionProcessor * _Nonnull)actionProcessor didDismissActionResultViewController:(UIViewController * _Nonnull)viewController;
/**
  Whether the processor should open the provided URL. Override and return false to prevent this.

  returns:
  default is true
*/
- (BOOL)actionProcessor:(ActionProcessor * _Nonnull)actionProcessor shouldOpenActionResultURL:(NSURL * _Nonnull)url forAction:(Action * _Nonnull)action;
/**
  Allows using any custom subclass of Action handle actions of type .custom. Perform will be called by the ActionProcessor.

  returns:
  The Action object to handle the provided actionData
*/
- (Action * _Nonnull)actionProcessor:(ActionProcessor * _Nonnull)actionProcessor customActionForData:(NSDictionary<NSString *, id> * _Nonnull)data;
@end

enum State : NSInteger;

SWIFT_CLASS("_TtC7Quikkly12ActionResult")
@interface ActionResult : NSObject
@property (nonatomic) enum State state;
@property (nonatomic, strong) Action * _Nullable action;
- (nonnull instancetype)initWithState:(enum State)state action:(Action * _Nullable)action OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

typedef SWIFT_ENUM(NSInteger, State) {
  StateSuccess = 0,
  StateFailure = 1,
  StateCancelled = 2,
  StateUnavailable = 3,
};

/**
  An enum of available Quikkly actions.
  Note: “custom” is not implemented and needs to be provided by the app.
*/
typedef SWIFT_ENUM(NSInteger, ActionType) {
  ActionTypeUnknown = -1,
  ActionTypeLikeOnFacebook = 0,
  ActionTypeFollowOnTwitter = 1,
  ActionTypeFollowOnFacebook = 2,
  ActionTypeFollowOnInstagram = 3,
  ActionTypeFollowOnGooglePlus = 4,
  ActionTypeFindOnMaps = 6,
  ActionTypeWatchOnYoutube = 7,
  ActionTypeListenOnSpotify = 8,
  ActionTypeDownloadOnAppStore = 11,
  ActionTypeDownloadOnGooglePlay = 12,
  ActionTypeWebsite = 17,
  ActionTypeBuyOnAmazon = 18,
  ActionTypeListenOnSoundcloud = 24,
  ActionTypeBuy = 30,
  ActionTypeVideoThenWeb = 32,
  ActionTypeListenOnAppleMusic = 33,
  ActionTypeRateOnTripAdvisor = 34,
  ActionTypeWatchOnTwitch = 35,
  ActionTypeViewOnPinterest = 36,
  ActionTypeViewOnEbay = 37,
  ActionTypeWatchOnVimeo = 39,
  ActionTypeMulti = 42,
  ActionTypeViewOnLinkedIn = 46,
  ActionTypeSearchOnTwitter = 51,
  ActionTypeViewFacebookPage = 52,
  ActionTypeWatchOnVine = 53,
  ActionTypeTweetOnTwitter = 55,
  ActionTypeLikeOnInstagram = 56,
  ActionTypeMessageOnTwitter = 57,
  ActionTypeCustom = 1000,
};


SWIFT_CLASS("_TtC7Quikkly9UrlAction")
@interface UrlAction : Action
@property (nonatomic, copy) NSURL * _Nullable url;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable data;
- (nonnull instancetype)initWithString:(NSString * _Nonnull)string SWIFT_UNAVAILABLE;
- (void)performWithCompletion:(void (^ _Nonnull)(ActionResult * _Nonnull))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC7Quikkly15AmazonBuyAction")
@interface AmazonBuyAction : UrlAction
- (nonnull instancetype)initWithUrl:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Quikkly22AppStoreDownloadAction")
@interface AppStoreDownloadAction : UrlAction
- (nonnull instancetype)initWithUrl:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Quikkly22AppleMusicListenAction")
@interface AppleMusicListenAction : UrlAction
- (nonnull instancetype)initWithUrl:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Quikkly9BuyAction")
@interface BuyAction : UrlAction
@end


SWIFT_CLASS("_TtC7Quikkly14EbayViewAction")
@interface EbayViewAction : UrlAction
- (nonnull instancetype)initWithUrl:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Quikkly20FacebookFollowAction")
@interface FacebookFollowAction : UrlAction
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Quikkly18FacebookLikeAction")
@interface FacebookLikeAction : UrlAction
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Quikkly22FacebookViewPageAction")
@interface FacebookViewPageAction : UrlAction
- (nonnull instancetype)initWithPageId:(uint64_t)pageId OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Quikkly24GooglePlayDownloadAction")
@interface GooglePlayDownloadAction : UrlAction
- (nonnull instancetype)initWithUrl:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Quikkly21InstagramFollowAction")
@interface InstagramFollowAction : UrlAction
@property (nonatomic, copy) NSString * _Nonnull name;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Quikkly18LinkedInViewAction")
@interface LinkedInViewAction : UrlAction
- (nonnull instancetype)initWithUrl:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Quikkly10MapsAction")
@interface MapsAction : UrlAction
@end

@class NSNumber;

SWIFT_CLASS("_TtC7Quikkly11MultiAction")
@interface MultiAction : Action
@property (nonatomic, copy) NSArray<NSNumber *> * _Nullable identifiers;
- (void)performWithCompletion:(void (^ _Nonnull)(ActionResult * _Nonnull))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC7Quikkly19PinterestViewAction")
@interface PinterestViewAction : UrlAction
- (nonnull instancetype)initWithUrl:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
@end

@class User;

SWIFT_CLASS("_TtC7Quikkly7Quikkly")
@interface Quikkly : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable apiKey;)
+ (NSString * _Nullable)apiKey;
+ (void)setApiKey:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) User * _Nullable user;)
+ (User * _Nullable)user;
+ (void)setUser:(User * _Nullable)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;

SWIFT_CLASS("_TtC7Quikkly8ScanView")
@interface ScanView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)start;
- (void)stop;
@end

@class NSBundle;

SWIFT_CLASS("_TtC7Quikkly18ScanViewController")
@interface ScanViewController : UIViewController <ActionProcessorDelegate>
@property (nonatomic, readonly) UIInterfaceOrientation preferredInterfaceOrientationForPresentation;
@property (nonatomic, readonly) UIInterfaceOrientationMask supportedInterfaceOrientations;
@property (nonatomic, readonly) UIStatusBarStyle preferredStatusBarStyle;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewWillDisappear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)scanView:(ScanView * _Nonnull)scanView didDetectScannables:(NSArray<Scannable *> * _Nonnull)scannables;
- (void)actionProcessorWillStartProcessing:(ActionProcessor * _Nonnull)actionProcessor;
- (void)actionProcessor:(ActionProcessor * _Nonnull)actionProcessor didProcessAction:(Action * _Nullable)action withResult:(ActionResult * _Nonnull)result;
- (void)actionProcessor:(ActionProcessor * _Nonnull)actionProcessor willPresentActionResultViewController:(UIViewController * _Nonnull)viewController;
- (void)actionProcessor:(ActionProcessor * _Nonnull)actionProcessor didDismissActionResultViewController:(UIViewController * _Nonnull)viewController;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@class Skin;

SWIFT_CLASS("_TtC7Quikkly9Scannable")
@interface Scannable : NSObject
@property (nonatomic, readonly, strong) NSNumber * _Nonnull value;
@property (nonatomic, strong) Skin * _Nonnull skin;
/**
  Asynchronous detection of scannables in an image.
  \param image The image to scan for scannables

  \param completion Block with an array of detected scannables; can be empty but not nil

*/
+ (void)detectInImage:(CGImageRef _Nonnull)image completion:(void (^ _Nonnull)(NSArray<Scannable *> * _Nonnull))completion;
/**
  Asynchronous detection of scannables in an image
  \param image The image to scan for scannables


  returns:
  An array of detected Scannable objects; can be empty but not nil; Scannables will only be a raw representation (i.e. no skin object)
*/
+ (NSArray<Scannable *> * _Nonnull)detectInImage:(CGImageRef _Nonnull)image;
/**
  Generates a scannable by using the actions on the Quikkly back-end.
  The Scannable object won’t be populated instantly and will asynchronously fetch data from the Quikkly back-end.
  \param completion this block will be invoked as soon as the scannable has been created


  returns:
  A new Scannable object
*/
- (nonnull instancetype)initWithAction:(Action * _Nonnull)action skin:(Skin * _Nullable)skin completion:(void (^ _Nonnull)(BOOL, Scannable * _Nonnull))completion;
/**
  Generates a scannable based on an identifier and a custom skin object
  \param value A numeric integer representation of the new Scannable object. The range of valid numbers is from 0 to 12 billion (12 * 10^9)

  \param skin The skin parameters applied to the new Scannable object


  returns:
  A new Scannable object
*/
- (nonnull instancetype)initWithValue:(NSNumber * _Nonnull)value skin:(Skin * _Nonnull)skin;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC7Quikkly13ScannableView")
@interface ScannableView : UIView
@property (nonatomic, strong) Scannable * _Nullable scannable;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithScannable:(Scannable * _Nonnull)scannable;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)reload;
- (void)layoutSubviews;
@end


SWIFT_CLASS("_TtC7Quikkly22SoundCloudListenAction")
@interface SoundCloudListenAction : UrlAction
- (nonnull instancetype)initWithUrl:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Quikkly25SpotifyFollowArtistAction")
@interface SpotifyFollowArtistAction : Action
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable data;
- (nullable instancetype)initWithString:(NSString * _Nonnull)string SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name OBJC_DESIGNATED_INITIALIZER;
- (void)performWithCompletion:(void (^ _Nonnull)(ActionResult * _Nonnull))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC7Quikkly27SpotifyFollowPlaylistAction")
@interface SpotifyFollowPlaylistAction : Action
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Quikkly19SpotifyListenAction")
@interface SpotifyListenAction : UrlAction
@property (nonatomic, copy) NSString * _Nonnull shareUri;
- (nonnull instancetype)initWithShareUri:(NSString * _Nonnull)shareUri OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Quikkly21TripAdvisorRateAction")
@interface TripAdvisorRateAction : UrlAction
- (nonnull instancetype)initWithUrl:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Quikkly19TwitterFollowAction")
@interface TwitterFollowAction : Action
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable data;
- (nullable instancetype)initWithString:(NSString * _Nonnull)string SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name OBJC_DESIGNATED_INITIALIZER;
- (void)performWithCompletion:(void (^ _Nonnull)(ActionResult * _Nonnull))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC7Quikkly20TwitterMessageAction")
@interface TwitterMessageAction : Action
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSString * _Nonnull message;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nullable data;
- (nullable instancetype)initWithString:(NSString * _Nonnull)string SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithName:(NSString * _Nonnull)name message:(NSString * _Nonnull)message OBJC_DESIGNATED_INITIALIZER;
- (void)performWithCompletion:(void (^ _Nonnull)(ActionResult * _Nonnull))completion;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC7Quikkly19TwitterSearchAction")
@interface TwitterSearchAction : UrlAction
@property (nonatomic, copy) NSString * _Nonnull query;
- (nonnull instancetype)initWithQuery:(NSString * _Nonnull)query OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Quikkly18TwitterTweetAction")
@interface TwitterTweetAction : UrlAction
@property (nonatomic, copy) NSString * _Nonnull text;
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text OBJC_DESIGNATED_INITIALIZER;
@end


@interface UIColor (SWIFT_EXTENSION(Quikkly))
@end


@interface UIColor (SWIFT_EXTENSION(Quikkly))
@end


@interface UIImage (SWIFT_EXTENSION(Quikkly))
@end


@interface UIImage (SWIFT_EXTENSION(Quikkly))
@end


@interface UIImageView (SWIFT_EXTENSION(Quikkly))
@end



SWIFT_CLASS("_TtC7Quikkly16VimeoWatchAction")
@interface VimeoWatchAction : UrlAction
- (nonnull instancetype)initWithUrl:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Quikkly15VineWatchAction")
@interface VineWatchAction : UrlAction
@property (nonatomic, copy) NSString * _Nonnull identifier;
- (nonnull instancetype)initWithIdentifier:(NSString * _Nonnull)identifier OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Quikkly13WebsiteAction")
@interface WebsiteAction : UrlAction
- (nonnull instancetype)initWithUrl:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7Quikkly18YoutubeWatchAction")
@interface YoutubeWatchAction : UrlAction
- (nonnull instancetype)initWithUrl:(NSURL * _Nullable)url OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
